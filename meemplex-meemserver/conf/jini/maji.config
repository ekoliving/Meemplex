import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.security.BasicProxyPreparer;

import net.jini.jrmp.JrmpExporter;

org.openmaji.implementation.server.manager.registry.MeemRegistryJiniExportWedge {

  remoteMeemExporter = new BasicJeriExporter(
//  TcpServerEndpoint.getInstance("hostname", 0),
    TcpServerEndpoint.getInstance(0),
    new BasicILFactory(),
    false,
    false
  );

  //remoteMeemExporter = new net.jini.iiop.IiopExporter();
  //remoteMeemExporter = new JrmpExporter();  // Need to use "rmic".
}

org.openmaji.implementation.server.security.auth.AuthenticatorService {
  authenticatorExporter = new BasicJeriExporter(
//  TcpServerEndpoint.getInstance("hostname", 0),
    TcpServerEndpoint.getInstance(0),
    new BasicILFactory(),
    false,
    false
  );
}

org.openmaji.implementation.server.nursery.jini.registry.RemoteRegistryWedge {
  remoteMeemExporter = new BasicJeriExporter(
//  TcpServerEndpoint.getInstance("hostname", 0),
    TcpServerEndpoint.getInstance(0),
    new BasicILFactory(),
    false,
    false
  );
}

org.openmaji.implementation.server.nursery.jini.meemstore.MeemStoreExporterWedge {
  meemStoreExporter = new BasicJeriExporter(
//  TcpServerEndpoint.getInstance("hostname", 0),
    TcpServerEndpoint.getInstance(0),
    new BasicILFactory(),
    false,
    false
  );

//meemStoreExporter = new JrmpExporter();  // Need to use "rmic".
}


net.jini.security.ProxyPreparer {
  proxyPreparer = new BasicProxyPreparer();
}

net.jini.lookup.ServiceDiscoveryManager {
//registrarPreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;

	discardWait = 30000L;  // 30 seconds

  serverExporter = new BasicJeriExporter(
//  TcpServerEndpoint.getInstance("hostname", 0),
    TcpServerEndpoint.getInstance(0),
    new BasicILFactory(),
    false,
    false
  );

  eventListenerExporter = new BasicJeriExporter(
//  TcpServerEndpoint.getInstance("hostname", 0),
    TcpServerEndpoint.getInstance(0),
    new BasicILFactory(),
    false,
    false
  );
}

net.jini.discovery.LookupDiscovery {
	multicastAnnouncementInterval = 60000L;
	multicastInterfaceRetryInterval = 120000;
}
