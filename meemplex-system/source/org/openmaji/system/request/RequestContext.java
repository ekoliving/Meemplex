/*
 * @(#)RequestContext.java
 *
 * Copyright 2004 by EkoLiving Pty Ltd.  All Rights Reserved.
 *
 * This software is the proprietary information of EkoLiving Pty Ltd.
 * Use is subject to license terms.
 */
package org.openmaji.system.request;

import org.openmaji.spi.MajiSPI;

/**
 * <p>
 * RequestContext is used to perform request/response tracking within Maji.
 * @author mg
 */
public interface RequestContext {
	
	/**
	 * Create a new request
	 * @param timeout The maximum amount of time (in msec) to keep the request alive
	 * @param context Application specific context information
	 * @throws RequestCreationException Thrown if timeout is not greater than zero or context is null
	 */
	public void begin(long timeout, Object context) throws RequestCreationException;
	
	/**
	 * Get the context object for the current request.
	 * @return The context object passed into the begin method if the current request was generated by this RequestContext, null otherwise
	 */
	public Object get();
	
	/**
	 * Suspend the current request. This is used if a non-blocking call external to Maji is made. 
	 * @return A SuspenedRequest object that can be used to resume the request when the non-blocking call returns.
	 * @throws RequestSuspendedException if the request has already been suspended
	 */
	public SuspendedRequest suspend() throws RequestSuspendedException;
	
	/**
	 * End the current request. This has no effect if the current request was not initiated by this RequestContext.
	 */
	public void end();

	public class spi {
		public static RequestContext create() {
			return ((RequestContext) MajiSPI.provider().create(RequestContext.class));
		}
	}
}